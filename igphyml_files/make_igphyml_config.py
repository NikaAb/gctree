#! /usr/bin/env python
# -*- coding: utf-8 -*-
"""
Prepare a configuration file for ancestral state reconstruction under the HLP16 model.

`dnapars` is a rather old program that doesn't play very well in a
pipeline.  It prompts the user for configuration information and reads
responses from stdin.  The config file generated by this script is
meant to mimic the responses to the expected prompts.

Typical usage is,

     $ mkdnaparsconfig.py sequence.phy --naive naive_id > dnapars.cfg
     $ dnapars < dnapars.cfg
"""

import re
import os
import argparse
from warnings import warn




def which(executable):
    for path in os.environ["PATH"].split(os.pathsep):
        if os.path.exists(os.path.join(path, executable)):
                return os.path.join(path, executable)
    return None

executable = 'igphyml'
print which(executable)




def main():

    parser = argparse.ArgumentParser(description='Prepare config file for ASR under the HLP16 model.',
    	                             formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument('--template', help='Config file template', type=str, metavar='FILE', required=True)
    parser.add_argument('--igphyml_exe', help='IgPhyML executable. Will search for the default localt like UNIX `which`.', type=str, required=True)
    parser.add_argument('--model', help='Which model to run? [gy94, hlp16]', type=str, required=True)
    parser.add_argument('--fasta_file', help='To find the length of the amino acid sequence.', type=str, required=True)
    args = parser.parse_args()
    

if __name__ == "__main__":
   main()

