#! /usr/bin/env python
# -*- coding: utf-8 -*-
"""
Read a PHYLIP-format file and produce an appropriate config file for passing to `dnapars`.

`dnapars` is a rather old program that doesn't play very well in a
pipeline.  It prompts the user for configuration information and reads
responses from stdin.  The config file generated by this script is
meant to mimic the responses to the expected prompts.

Typical usage is,

     $ mkdnaparsconfig.py sequence.phy --naive naive_id > dnapars.cfg
     $ dnapars < dnapars.cfg
"""
import re
import os
import argparse
from warnings import warn

def extract_naive(file, naive):
    with open(file, 'r') as fh:
        for lineno, line in enumerate(fh):
            if re.match(naive, line):
                return lineno
        raise RuntimeError('naive match not found')

def main():

    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('phylip', help='PHYLIP input', type=str)
    parser.add_argument('--naive', default='naive', help='naive sequence id', type=str)
    args = parser.parse_args()

    naive_idx = extract_naive(args.phylip, args.naive)
    print(os.path.abspath(args.phylip))	    # phylip input file
    print('O')		        # Outgroup root
    print(naive_idx)	    # naive index in phylip
    print('J')              # jumble
    print('13')
    print('10')
    print('4')
    print('5')
    print('.')
    print('Y')

if __name__ == "__main__":
   main()
